Given an array of integers and a number k, write a function that returns true if given array can be divided into pairs such that sum of every pair is divisible by k.
 

Example 1 :

Input : arr = [9, 5, 7, 3], k = 6
Output: True
Explanation: {(9, 3), (5, 7)} is a 
possible solution. 9 + 3 = 12 is divisible
by 6 and 7 + 5 = 12 is also divisible by 6.




def canDivideArray(arr, k):
    if len(arr) % 2 != 0:
        return False  # If the array has an odd number of elements, it cannot be divided into pairs.

    remainder_count = {}  # A dictionary to store the count of remainders when divided by k.

    for num in arr:
        remainder = num % k
        if remainder in remainder_count:
            remainder_count[remainder] += 1
        else:
            remainder_count[remainder] = 1

    if remainder_count.get(0, 0) % 2 != 0:
        return False  # If there are an odd number of elements with remainder 0, they cannot be paired.

    for remainder in remainder_count:
        if remainder == 0:
            continue  # Skip elements with remainder 0.

        complement = (k - remainder) % k
        if complement not in remainder_count:
            return False  # There is no complementary element for this remainder.

        if remainder_count[remainder] != remainder_count[complement]:
            return False  # The count of elements with this remainder doesn't match its complement.

    return True

# Example usage
arr = [9, 5, 7, 3]
k = 6
result = canDivideArray(arr, k)
print(result)  # Output: True
